{"version":2,"type":"excalidraw","files":{},"appState":{"viewBackgroundColor":"#ffffff"},"source":"https:\/\/excalidraw.com","elements":[{"opacity":100,"angle":0,"index":"a0","versionNonce":594879123,"isDeleted":false,"text":"Ticket Booking System","type":"text","y":241,"backgroundColor":"transparent","width":415.7999267578125,"textAlign":"left","seed":383484317,"lineHeight":1.25,"updated":1757438546146,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":45,"fillStyle":"solid","originalText":"Ticket Booking System","version":28,"fontSize":36,"x":717,"fontFamily":8,"locked":false,"id":"brl49Bg3IXYrZXp00x0ur","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a1","versionNonce":88025395,"isDeleted":false,"text":"1. Event & Venue Service\n2. Search Service\n3. Booking & Inventory Service","type":"text","y":479,"backgroundColor":"transparent","width":330,"textAlign":"left","seed":1275183379,"lineHeight":1.25,"updated":1757438810338,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":75,"fillStyle":"solid","originalText":"1. Event & Venue Service\n2. Search Service\n3. Booking & Inventory Service","version":32,"fontSize":20,"x":559,"fontFamily":8,"locked":false,"id":"I7KuhUsCG1wg6mLcKBI4i","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a2","versionNonce":2095614547,"isDeleted":false,"text":"1. Venue\n\nPOST \/api\/v1\/venues\n{name, address:{street, city,district,state,pin,…etc}, location:{lat,lon}, imageUrls}\n\n- Admins can create venues which are nothing but MovieTheater\/Auditorium etc.\n- The request lands on the API gateway and routed to the Events&Venues service.\n- Venues service will add this entry in the Venues table.\n  Venue (id, name, address, location:{lat,lon}, imageUrls:[s3Keys])\n- Images are stored in s3 and thier keys are stored in venue record.\n\n- Later an Hall\/Screen is created under this venue\n\nPOST \/api\/v1\/venues\/{venueId}\/hall\n{hallName,seatLayout}\n- Request lands on the Events&Venues service and creates an entry in the Hall table.\n  Hall (id, venueId, hallName, seatLayout)\n\nSeatLayout might look like this\n{\n    sections:[\n        {\n            id, name, …metadata,\n            rows:[\n                label,\n                seats:[\n                    {id, label, coordinates:{x,y},…metadata}\n                ],\n                …metadata\n            ]\n        }\n    ]\n}","type":"text","y":755,"backgroundColor":"transparent","width":935,"textAlign":"left","seed":1224304371,"lineHeight":1.25,"updated":1757440699714,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":825,"fillStyle":"solid","originalText":"1. Venue\n\nPOST \/api\/v1\/venues\n{name, address:{street, city,district,state,pin,…etc}, location:{lat,lon}, imageUrls}\n\n- Admins can create venues which are nothing but MovieTheater\/Auditorium etc.\n- The request lands on the API gateway and routed to the Events&Venues service.\n- Venues service will add this entry in the Venues table.\n  Venue (id, name, address, location:{lat,lon}, imageUrls:[s3Keys])\n- Images are stored in s3 and thier keys are stored in venue record.\n\n- Later an Hall\/Screen is created under this venue\n\nPOST \/api\/v1\/venues\/{venueId}\/hall\n{hallName,seatLayout}\n- Request lands on the Events&Venues service and creates an entry in the Hall table.\n  Hall (id, venueId, hallName, seatLayout)\n\nSeatLayout might look like this\n{\n    sections:[\n        {\n            id, name, …metadata,\n            rows:[\n                label,\n                seats:[\n                    {id, label, coordinates:{x,y},…metadata}\n                ],\n                …metadata\n            ]\n        }\n    ]\n}","version":988,"fontSize":20,"x":567,"fontFamily":8,"locked":false,"id":"KKMORwR-TD-6E4r2vnuYA","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a3","versionNonce":971592765,"isDeleted":false,"text":"2. Event Creation\n\nPOST \/api\/v1\/events\n{eventName, imageUrl, ..metadata}\n\nPUT \/api\/v1\/events\/venues\n{venues:[{venueId,hallId,date,time}]}\n\n- Admins creates events and attach venues to it.\n- Requests gets lands on the Events&Venues Service.\n\n- Event record gets created and added in the events table.\n  Event {id, name, imageUrl, …metadata}\n\n- A record gets added in the EventVenues table.\n  EventVenues {eventId, venueId, hallId, date, time}\n  \n","type":"text","y":1708,"backgroundColor":"transparent","width":638,"textAlign":"left","seed":60302771,"lineHeight":1.25,"updated":1757440894182,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":450,"fillStyle":"solid","originalText":"2. Event Creation\n\nPOST \/api\/v1\/events\n{eventName, imageUrl, ..metadata}\n\nPUT \/api\/v1\/events\/venues\n{venues:[{venueId,hallId,date,time}]}\n\n- Admins creates events and attach venues to it.\n- Requests gets lands on the Events&Venues Service.\n\n- Event record gets created and added in the events table.\n  Event {id, name, imageUrl, …metadata}\n\n- A record gets added in the EventVenues table.\n  EventVenues {eventId, venueId, hallId, date, time}\n  \n","version":507,"fontSize":20,"x":571,"fontFamily":8,"locked":false,"id":"lGxsv1tSk9PJCFsVb-6O_","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a4","versionNonce":1851418013,"isDeleted":false,"text":"3. ShowSeat creation\n\n- whenever an event show is created and event is published\n- Some worker (SeatManager\/ShowtimeInventory will consume this event and create seats for this show)\n- This worker will fetch hall latest layout and create show seats.\n  ShowSeat ( eventId, showId, venueId, hallId, secionId, rowId, seatId, price, category, coordinates,…metadata)\n- For a show all seats gets created.\n","type":"text","y":2190.503194199848,"backgroundColor":"transparent","width":1221,"textAlign":"left","seed":157792403,"lineHeight":1.25,"updated":1757441879430,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":200,"fillStyle":"solid","originalText":"3. ShowSeat creation\n\n- whenever an event show is created and event is published\n- Some worker (SeatManager\/ShowtimeInventory will consume this event and create seats for this show)\n- This worker will fetch hall latest layout and create show seats.\n  ShowSeat ( eventId, showId, venueId, hallId, secionId, rowId, seatId, price, category, coordinates,…metadata)\n- For a show all seats gets created.\n","version":451,"fontSize":20,"x":569.2840261795562,"fontFamily":8,"locked":false,"id":"TrIs65fjpZbliYjs4oJ3X","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a5","versionNonce":848517757,"isDeleted":false,"text":"4. View Events\n\n- Now admins has added events and created shows we can show this to the user.\n\n- Whenever user lands on the Home screen we can ask user to share location coordinates or city name\n  and we can fetch events\/shows nearby to the user.\n\n- this request lands on the Search Service.\n- Search service uses elastic search to find shows nearby user and returns back to the user.\n- whenever a show\/event is created that data is ingested into the elastic search indexes.\n\n- Users can also search events, venues, shows, etc.\n","type":"text","y":2494.896347485711,"backgroundColor":"transparent","width":1089,"textAlign":"left","seed":1241390333,"lineHeight":1.25,"updated":1757442400654,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":325,"fillStyle":"solid","originalText":"4. View Events\n\n- Now admins has added events and created shows we can show this to the user.\n\n- Whenever user lands on the Home screen we can ask user to share location coordinates or city name\n  and we can fetch events\/shows nearby to the user.\n\n- this request lands on the Search Service.\n- Search service uses elastic search to find shows nearby user and returns back to the user.\n- whenever a show\/event is created that data is ingested into the elastic search indexes.\n\n- Users can also search events, venues, shows, etc.\n","version":613,"fontSize":20,"x":575.1406839069618,"fontFamily":8,"locked":false,"id":"tUWdF3lHzs7eNc6AMPPhS","strokeStyle":"solid"},{"opacity":100,"angle":0,"index":"a6","versionNonce":229250099,"isDeleted":false,"text":"5. Select seats\n\n- User selected event, venue, show time\n- Now we will fetch seat layout with seat availability from backend for the specified showtime.\n- Seats are rendered using seat layout provided.\n- User selects seats and clicks proceed.\n- Now we will inform backend booking service to block this seat\n- We will create a record in the redis with 10min expiry for the seat with user id\n    - If user makes payment within this time we will allocate this seat otherwise we make seat available for other\n      users\n- We will return final amount and seat available status back to the user.\n- User clicks on proceed payment.\n- Request lands on the Booking service.\n- Service talks with payment gateway and return paymentIntent,clientSecret back to service \n  which are returned back to the client\n- Client devices mounts payment elements using this paymentIntent and clientSecret and makes the payment.\n- Once the payment is done payment gateway notifies booking service and booking service creates order.\n\n- Booking is confirmed to the client.","type":"text","y":2926.896347485711,"backgroundColor":"transparent","width":1254,"textAlign":"left","seed":1221878963,"lineHeight":1.25,"updated":1757443339857,"autoResize":true,"strokeWidth":2,"strokeColor":"#1e1e1e","roughness":1,"verticalAlign":"top","groupIds":[],"height":475,"fillStyle":"solid","originalText":"5. Select seats\n\n- User selected event, venue, show time\n- Now we will fetch seat layout with seat availability from backend for the specified showtime.\n- Seats are rendered using seat layout provided.\n- User selects seats and clicks proceed.\n- Now we will inform backend booking service to block this seat\n- We will create a record in the redis with 10min expiry for the seat with user id\n    - If user makes payment within this time we will allocate this seat otherwise we make seat available for other\n      users\n- We will return final amount and seat available status back to the user.\n- User clicks on proceed payment.\n- Request lands on the Booking service.\n- Service talks with payment gateway and return paymentIntent,clientSecret back to service \n  which are returned back to the client\n- Client devices mounts payment elements using this paymentIntent and clientSecret and makes the payment.\n- Once the payment is done payment gateway notifies booking service and booking service creates order.\n\n- Booking is confirmed to the client.","version":1197,"fontSize":20,"x":593.1406839069618,"fontFamily":8,"locked":false,"id":"GFgN8c_XLr-1ksrZVSKc9","strokeStyle":"solid"}]}